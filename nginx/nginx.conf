events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;  # 기본 MIME 타입 설정 추가
    default_type application/octet-stream;
    
    # 로컬에서는 주석 ========
    server {
        listen 80;
        server_name mindflow.ddns.net;
        return 301 https://$host$request_uri;
    }
    # ===== ===== ===== =====

    server {
        # 로컬에서는 주석 ========
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name mindflow.ddns.net;

        ssl_certificate /etc/letsencrypt/live/mindflow.ddns.net/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mindflow.ddns.net/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;

        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
        # ====== ===== ====== ======

        # 로컬에서 주석 해제
        # listen 80;

        # React 정적 파일 제공
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }

        # JavaScript, CSS, 이미지 등의 정적 파일 제공
        location ~* \.(?:ico|css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|map)$ {
            root /usr/share/nginx/html;
            expires 6M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Spring Boot 백엔드로 연결
        location /api/ {
            proxy_pass http://springboot:8453;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;  # 클라이언트가 요청한 프로토콜 전달
        }

        # Swagger UI 연결
        location /swagger-ui/ {
            proxy_pass http://springboot:8453/swagger-ui/index.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        # API 문서 연결
        location /v3/api-docs/ {
            proxy_pass http://springboot:8453/v3/api-docs/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /socket.io/ {
            proxy_pass http://flask:5001/socket.io/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_read_timeout 60s;  # 클라이언트와 서버 간의 타임아웃 설정
            proxy_send_timeout 60s;  # 서버로 데이터를 보낼 때의 타임아웃 설정
            proxy_buffering off;     # 웹소켓은 버퍼링을 비활성화해야 함
        }
    }
}
